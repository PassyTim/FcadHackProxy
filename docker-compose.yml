services:
  fcadhackproxy:
    image: fcadhackproxy
    build:
      context: .
      dockerfile: FcadHackProxy/Dockerfile
    depends_on:
      cache :
        condition: service_started
      mongo:
        condition: service_started
    networks:
      - innerNetwork
      - monitoringnet
    deploy:
      mode: replicated
      replicas : 2
      labels:
        - "traefik.http.routers.fcadhackproxy.rule=Host(`app1.example.com`)"
        - "traefik.http.services.fcadhackproxy.loadbalancer.server.port=8080"
        - "traefik.http.routers.fcadhackproxy2.rule=Host(`replica2.example.com`)"
        - "traefik.http.services.fcadhackproxy2.loadbalancer.server.port=8080"
  
  admin-panel:
    container_name: admin-panel
    image: passyexe/admin-panel:1
    depends_on:
      - fcadhackproxy
    networks:
      - innerNetwork
    ports: 
      - "3001:3001"
    environment:
      - REACT_APP_BASE_URL=http://localhost:4000
      - PORT=3001
  
  cache:
    image: redis:latest
    container_name: redis-cache
    restart: always
    ports:
      - '6379:6379'
    networks:
      - innerNetwork

  mongo:
    image: mongo:latest
    container_name: mongoDb
    ports: 
      - 27017:27017
    networks:
      - innerNetwork
    
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - monitoringnet
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - /run/desktop/mnt/host/c/Projects/FcadHackProxy/volumes/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      - monitoringnet
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
  
  nginx:
    image: nginx:latest
    container_name: nginx-loadBalancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fcadhackproxy
    ports:
      - '4000:4000'
    networks:
      - innerNetwork
      
networks:
  monitoringnet:
    { }
  innerNetwork:
    driver: bridge